# Pytest Configuration for CBC Registration Functional Test Suite
# Updated by Claude AI on 2025-09-25

[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for functional test categorization
markers =
    critical: Critical functionality tests (registration workflows, admin dashboard, CSV export)
    admin: Admin interface and management tests
    registration: Participant registration workflow tests
    csv: CSV export functionality tests
    auth: Authentication and authorization tests
    workflow: End-to-end workflow tests
    security: Security validation tests
    performance: Performance and load tests
    slow: Slow-running tests (use --slow to include)
    family: Family email sharing scenario tests

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture configuration
capture = no                    # Don't capture stdout/stderr by default
tb = short                     # Short traceback format

# Warning configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Test execution options
addopts =
    -v                         # Verbose output
    --strict-markers           # Require markers to be defined
    --tb=short                 # Short traceback format
    --maxfail=5               # Stop after 5 failures for faster feedback
    --html=reports/test_report.html
    --self-contained-html

# Test timeouts (pytest-timeout) - removed global timeout
# timeout = 300                 # 5 minute timeout per test
# timeout_method = thread       # Use thread-based timeouts

# Coverage configuration (if pytest-cov is installed)
# addopts = --cov=tests --cov-report=html --cov-report=term-missing

# Test environment variables
env =
    PYTHONPATH = .
    GOOGLE_CLOUD_PROJECT = vancouver-cbc-registration
    TEST_ENVIRONMENT = test