# Pytest Configuration for CBC Registration Test Suite
# Updated by Claude AI on 2025-09-22

[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    critical: Critical functionality tests (registration, auth, data consistency)
    admin: Tests requiring admin authentication
    leader: Tests requiring leader authentication
    slow: Tests that take longer to run (>30 seconds)
    security: Security-related tests (input sanitization, CSRF, etc.)
    integration: End-to-end integration tests
    api: API endpoint tests
    browser: Tests requiring browser automation
    database: Tests requiring database operations
    csv: CSV export validation tests
    race_condition: Concurrent operation tests

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture configuration
capture = no                    # Don't capture stdout/stderr by default
tb = short                     # Short traceback format

# Warning configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Test execution options
addopts =
    -v                         # Verbose output
    --strict-markers           # Require markers to be defined
    --tb=short                 # Short traceback format
    --maxfail=10              # Stop after 10 failures
    --durations=10            # Show 10 slowest tests

# Parallel execution (when using pytest-xdist)
# Uncomment to enable parallel testing:
# addopts = -n auto

# Test timeouts (if pytest-timeout is installed)
# timeout = 300                 # 5 minute timeout per test
# timeout_method = thread       # Use thread-based timeouts

# HTML report configuration (when using pytest-html)
# addopts = --html=test_reports/report.html --self-contained-html

# Coverage configuration (if pytest-cov is installed)
# addopts = --cov=tests --cov-report=html --cov-report=term-missing

# Test environment variables
env =
    PYTHONPATH = .
    GOOGLE_CLOUD_PROJECT = vancouver-cbc-registration
    TEST_ENVIRONMENT = test